name: DockerSuuq
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: suuqplattform
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
  postgrest:
    image: postgrest/postgrest:v12.2.12
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "3000:3000"
    restart: always
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@db:5432/suuqplattform
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
      PGRST_DB_SCHEMA: suuq
      # zwingend jwt zugriff ohne: PGRST_DB_ANON_ROLE: web_anon
      # PGRST_OPENAPI_MODE: ignore-privileges
      PGRST_OPENAPI_MODE: follow-privileges
      PGRST_LOG_LEVEL: debug
      PGRST_JWT_SECRET: '@/jwt/keycloak-jwks.json'
      PGRST_JWT_ROLE_CLAIM_KEY: .realm_access.roles[0]
      PGRST_JWT_AUDIENCE: "suuq-angular-frontend-app"
    volumes:
      - ./keycloak-jwks.json:/jwt/keycloak-jwks.json
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_EMAIL_HOST: itz7 
      KC_EMAIL_PORT: 25
      KC_EMAIL_FROM: "nico.wulff@itz-rostock.de"
      KC_EMAIL_FROM_DISPLAY_NAME: "Suuq Plattform"
      KC_EMAIL_STARTTLS: false
      KC_EMAIL_SSL: false
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak-realm.json:/opt/keycloak/data/import/realm.json
      - ./keycloak-h2-data:/opt/keycloak/data/h2/
    healthcheck:
      test: ["CMD", "sh", "-c", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /realms/suuq/protocol/openid-connect/certs HTTP/1.0\\r\\nHost: localhost\\r\\n\\r\\n' >&3 && grep '200 OK' <&3"]
      interval: 5s
      timeout: 5s
      retries: 90
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "8246:8080"
    environment:
      SWAGGER_JSON: http://localhost:3000/
